{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\JS Project\\\\CryptoApp\\\\components\\\\Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = '';\n      var currency = this.state.currency;\n      var _this$props$bpi = this.props.bpi,\n          USD = _this$props$bpi.USD,\n          GBP = _this$props$bpi.GBP,\n          EUR = _this$props$bpi.EUR;\n\n      if (currency === 'USD') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \"Bitcoin Rate for \", USD.description, \" : \", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, USD.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \" \", USD.rate));\n      } else if (currency == 'GBP') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Bitcoin Rate for \", GBP.description, \" : \", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, GBP.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \" \", GBP.rate));\n      } else if (currency === 'EUR') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Bitcoin Rate for \", EUR.description, \" : \", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, EUR.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \" \", EUR.rate));\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, list), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), __jsx(\"select\", {\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            currency: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"USD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"USD\"), __jsx(\"option\", {\n        value: \"GBP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"GBP\"), __jsx(\"option\", {\n        value: \"EUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"EUR\")));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["D:/JS Project/CryptoApp/components/Prices.js"],"names":["Prices","currency","list","state","props","bpi","USD","GBP","EUR","description","code","rate","e","setState","target","value","React","Component"],"mappings":";;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;;6BAIC;AAAA;;AACL,UAAIC,IAAI,GAAG,EAAX;AADK,UAEGD,QAFH,GAEgB,KAAKE,KAFrB,CAEGF,QAFH;AAAA,4BAGqB,KAAKG,KAAL,CAAWC,GAHhC;AAAA,UAGGC,GAHH,mBAGGA,GAHH;AAAA,UAGQC,GAHR,mBAGQA,GAHR;AAAA,UAGaC,GAHb,mBAGaA,GAHb;;AAKL,UAAIP,QAAQ,KAAK,KAAjB,EAAwB;AACpBC,QAAAA,IAAI,GACA;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACsBI,GAAG,CAACG,WAD1B,SACyC;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCH,GAAG,CAACI,IAA3C,CADzC,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUJ,GAAG,CAACK,IAAd,CAFJ,CADJ;AAKH,OAND,MAMO,IAAIV,QAAQ,IAAI,KAAhB,EAAuB;AAC1BC,QAAAA,IAAI,GACA;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACsBK,GAAG,CAACE,WAD1B,SACyC;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCF,GAAG,CAACG,IAA3C,CADzC,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUH,GAAG,CAACI,IAAd,CAFJ,CADJ;AAKH,OANM,MAMA,IAAIV,QAAQ,KAAK,KAAjB,EAAwB;AAC3BC,QAAAA,IAAI,GACA;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACsBM,GAAG,CAACC,WAD1B,SACyC;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCD,GAAG,CAACE,IAA3C,CADzC,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUF,GAAG,CAACG,IAAd,CAFJ,CADJ;AAKH;;AAED,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,IADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEZ,YAAAA,QAAQ,EAAEW,CAAC,CAACE,MAAF,CAASC;AAArB,WAAd,CAAJ;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CALJ,CADJ;AAaH;;;;EA3CgBC,KAAK,CAACC,S;;AA8C3B,eAAejB,MAAf","sourcesContent":["class Prices extends React.Component {\r\n    state = {\r\n        currency: 'USD'\r\n    }\r\n\r\n    render() {\r\n        let list = '';\r\n        const { currency } = this.state;\r\n        const { USD, GBP, EUR } = this.props.bpi;\r\n\r\n        if (currency === 'USD') {\r\n            list =\r\n                <li className=\"list-group-item\">\r\n                    Bitcoin Rate for {USD.description} : <span className=\"badge badge-primary\">{USD.code}</span>\r\n                    <strong> {USD.rate}</strong>\r\n                </li>\r\n        } else if (currency == 'GBP') {\r\n            list =\r\n                <li className=\"list-group-item\">\r\n                    Bitcoin Rate for {GBP.description} : <span className=\"badge badge-primary\">{GBP.code}</span>\r\n                    <strong> {GBP.rate}</strong>\r\n                </li>\r\n        } else if (currency === 'EUR') {\r\n            list =\r\n                <li className=\"list-group-item\">\r\n                    Bitcoin Rate for {EUR.description} : <span className=\"badge badge-primary\">{EUR.code}</span>\r\n                    <strong> {EUR.rate}</strong>\r\n                </li>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                    {list}\r\n                </ul>\r\n                <br />\r\n                <select className=\"form-control\" onChange={e => this.setState({ currency: e.target.value })}>\r\n                    <option value=\"USD\">USD</option>\r\n                    <option value=\"GBP\">GBP</option>\r\n                    <option value=\"EUR\">EUR</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Prices;"]},"metadata":{},"sourceType":"module"}