{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\JS Project\\\\CryptoApp\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Fetch from 'isomorphic-unfetch';\nimport Prices from '../components/Prices';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Welcome to Crypto App\"), props.data.time.updated, __jsx(Prices, {\n    bpi: props.data.bpi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.coindesk.com/v1/bpi/currentprice.json'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/JS Project/CryptoApp/pages/index.js"],"names":["Layout","Fetch","Prices","Index","props","data","time","updated","bpi","getInitialProps","fetch","res","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEKA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,OAFrB,EAGI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEH,KAAK,CAACC,IAAN,CAAWG,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ;AAUH,CAXD;;AAaAL,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFC,KAAK,CAAC,mDAAD,CADH;;AAAA;AACdC,UAAAA,GADc;AAAA;AAAA,2CAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdP,UAAAA,IAFc;AAAA,2CAIb;AACHA,YAAAA,IAAI,EAAEA;AADH,WAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASA,eAAeF,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport Fetch from 'isomorphic-unfetch';\r\nimport Prices from '../components/Prices';\r\n\r\nconst Index = (props) => {\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <h1>Welcome to Crypto App</h1>\r\n                {props.data.time.updated}\r\n                <Prices bpi={props.data.bpi} />\r\n\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nIndex.getInitialProps = async function () {\r\n    const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');\r\n    const data = await res.json();\r\n\r\n    return {\r\n        data: data\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}